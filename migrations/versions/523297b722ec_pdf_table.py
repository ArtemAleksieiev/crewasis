"""pdf table

Revision ID: 523297b722ec
Revises: a8b6790c7116
Create Date: 2019-12-17 15:52:21.728780

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '523297b722ec'
down_revision = 'a8b6790c7116'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('population')
    op.drop_index('idx_geodata_geom', table_name='geodata')
    op.drop_index('ix_geodata_index', table_name='geodata')
    op.drop_table('geodata')
    op.drop_table('spatial_ref_sys')
    op.drop_table('colorado')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colorado',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('january', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('february', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('march', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('april', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('may', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('june', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('july', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('august', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('september', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('october', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('november', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('december', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.create_table('geodata',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('GEO_ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LSAD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CENSUSAREA', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('geom', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name='geodata_pkey')
    )
    op.create_index('ix_geodata_index', 'geodata', ['index'], unique=False)
    op.create_index('idx_geodata_geom', 'geodata', ['geom'], unique=False)
    op.create_table('population',
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('pop', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('percent', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('adults', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('state', name='population_pkey')
    )
    # ### end Alembic commands ###
